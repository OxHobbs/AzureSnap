{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "automationAccounts_austinauto_name": {
      "type": "SecureString"
    },
    "automationAccounts_gov_automation_name": {
      "type": "SecureString"
    },
    "automationAccounts_iam_va_name": {
      "type": "SecureString"
    },
    "automationAccounts_testauto_name": {
      "type": "SecureString"
    },
    "automationAccounts_west_auto_name": {
      "type": "SecureString"
    },
    "certificates_AzureClassicRunAsCertificate_base64Value": {
      "type": "SecureString"
    },
    "certificates_AzureRunAsCertificate_base64Value": {
      "type": "SecureString"
    },
    "certificates_AzureClassicRunAsCertificate_base64Value_1": {
      "type": "SecureString"
    },
    "certificates_AzureRunAsCertificate_base64Value_1": {
      "type": "SecureString"
    },
    "variables_Microsoft.Azure.Automation.SourceControl.OAuthToken_value": {
      "type": "SecureString"
    },
    "certificates_AzureClassicRunAsCertificate_base64Value_2": {
      "type": "SecureString"
    },
    "certificates_AzureRunAsCertificate_base64Value_2": {
      "type": "SecureString"
    },
    "certificates_AzureClassicRunAsCertificate_base64Value_3": {
      "type": "SecureString"
    },
    "certificates_AzureRunAsCertificate_base64Value_3": {
      "type": "SecureString"
    },
    "extensions_IaaSDiagnostics_xmlCfg": {
      "type": "SecureString"
    },
    "extensions_IaaSDiagnostics_storageAccountName": {
      "type": "SecureString"
    },
    "extensions_IaaSDiagnostics_storageAccountKey": {
      "type": "SecureString"
    },
    "extensions_IaaSDiagnostics_storageAccountEndPoint": {
      "type": "SecureString"
    },
    "servers_sqltest_name": {
      "defaultValue": null,
      "type": "String"
    },
    "disks_datadisk_name": {
      "defaultValue": null,
      "type": "String"
    },
    "disks_datadisk1_name": {
      "defaultValue": null,
      "type": "String"
    },
    "disks_MyBigVMOSDisk_name": {
      "defaultValue": null,
      "type": "String"
    },
    "vaults_test_name": {
      "defaultValue": null,
      "type": "String"
    },
    "virtualMachines_rhel6_name": {
      "defaultValue": null,
      "type": "String"
    },
    "virtualMachines_rhel73_name": {
      "defaultValue": null,
      "type": "String"
    },
    "vaults_admin_password_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_Nic2_name": {
      "defaultValue": null,
      "type": "String"
    },
    "virtualMachines_DSCTest_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_third_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_dc_ip_name": {
      "defaultValue": null,
      "type": "String"
    },
    "virtualNetworks_gov_vnet_name": {
      "defaultValue": null,
      "type": "String"
    },
    "virtualNetworks_test_dns_name": {
      "defaultValue": null,
      "type": "String"
    },
    "storageAccounts_oxtest01_name": {
      "defaultValue": null,
      "type": "String"
    },
    "storageAccounts_oxtest02_name": {
      "defaultValue": null,
      "type": "String"
    },
    "virtualMachines_Win2012R2_name": {
      "defaultValue": null,
      "type": "String"
    },
    "vaults_austin_va_name": {
      "defaultValue": null,
      "type": "String"
    },
    "storageAccounts_filestore_name": {
      "defaultValue": null,
      "type": "String"
    },
    "virtualMachines_Server2016_name": {
      "defaultValue": null,
      "type": "String"
    },
    "virtualMachines_ubuntu_dev_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_MyBigNIC_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_rhel6695_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_NicTest2_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_MyBigPIP_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_rhel6_ip_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_test1_ip_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_NicTest2_name": {
      "defaultValue": null,
      "type": "String"
    },
    "virtualNetworks_govvnet482_name": {
      "defaultValue": null,
      "type": "String"
    },
    "storageAccounts_govdiag284_name": {
      "defaultValue": null,
      "type": "String"
    },
    "storageAccounts_govdiag514_name": {
      "defaultValue": null,
      "type": "String"
    },
    "storageAccounts_sharestuff_name": {
      "defaultValue": null,
      "type": "String"
    },
    "storageAccounts_vhdpremium_name": {
      "defaultValue": null,
      "type": "String"
    },
    "virtualMachines_ansible_dev_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_f5test540_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_rhel73343_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_f5test_ip_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_rhel73_ip_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_ipconfig1_name": {
      "defaultValue": null,
      "type": "String"
    },
    "storageAccounts_govdisks419_name": {
      "defaultValue": null,
      "type": "String"
    },
    "storageAccounts_vhdstandard_name": {
      "defaultValue": null,
      "type": "String"
    },
    "automationAccounts_iam_va_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_dsctest803_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_f5_test274_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_DSCTest_ip_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_f5_test_ip_name": {
      "defaultValue": null,
      "type": "String"
    },
    "databases_testdb_name": {
      "defaultValue": null,
      "type": "String"
    },
    "virtualMachines_WinServ2016_1_name": {
      "defaultValue": null,
      "type": "String"
    },
    "virtualMachines_WinServ2016_2_name": {
      "defaultValue": null,
      "type": "String"
    },
    "virtualMachines_WinServ2016_3_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_rhel6second_name": {
      "defaultValue": null,
      "type": "String"
    },
    "automationAccounts_testauto_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "virtualMachines_ansible_master_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_test_dns_nic_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_win2012r2266_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_Win2012R2_ip_name": {
      "defaultValue": null,
      "type": "String"
    },
    "automationAccounts_west_auto_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "virtualMachines_ansible_client1_name": {
      "defaultValue": null,
      "type": "String"
    },
    "virtualMachines_ansible_restore_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_ansiblesecond_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_server2016501_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_ubuntu_dev441_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_Server2016_ip_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_ubuntu_dev_ip_name": {
      "defaultValue": null,
      "type": "String"
    },
    "automationAccounts_austinauto_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_ansible_dev447_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkSecurityGroups_f5test_nsg_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_litware_db1_ip_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_litware_dc1_ip_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_ansible_dev_ip_name": {
      "defaultValue": null,
      "type": "String"
    },
    "storageAccounts_datadiskstandard_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkSecurityGroups_bastion_nsg_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkSecurityGroups_default_nsg_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkSecurityGroups_f5_test_nsg_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_ansible_master72_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_winserv2016_1737_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_winserv2016_2698_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_winserv2016_3336_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_WinServ2016_1_ip_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_WinServ2016_2_ip_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_WinServ2016_3_ip_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_ansible_master_ip_name": {
      "defaultValue": null,
      "type": "String"
    },
    "automationAccounts_gov_automation_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_ansible_client1454_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_ansible_client1_ip_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_sql2016On2012R2PIP_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_sql2016on2012r2_nic_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkSecurityGroups_ansible_dev_nsg_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_barracuda_firewall_ip_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkSecurityGroups_ansible_master_nsg_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkSecurityGroups_ansible_client1_nsg_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Azure_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkSecurityGroups_barracuda_firewall_nsg_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Azure_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Azure_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Azure_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Sql_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_BaseRole_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Azure_name_4": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Azure.Storage_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Sql_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "disks_d_89056aa292f7427a8c01746efe157eb9_osdisk_000_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_Test1_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_Test2_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_test4_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_dosSEP_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Pester_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Sql_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Sql_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Compute_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Profile_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Storage_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Azure.Storage_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "extensions_IaaSDiagnostics_name": {
      "defaultValue": null,
      "type": "String"
    },
    "disks_rhel6_OsDisk_1_c7b9bfad147c402590c85d82dd6577aa_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_stop_vms_py_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_testrunbook_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_BaseRole_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Azure.Storage_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "disks_f5test_OsDisk_1_68488e3bd6c14bdf8082805d4aee53f4_name": {
      "defaultValue": null,
      "type": "String"
    },
    "disks_rhel73_OsDisk_1_c462312871d5497aaae857dd50c11a2e_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Azure.Storage_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_TestFiles_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Resources_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Compute_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Profile_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Storage_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "disks_f5_test_OsDisk_1_46d849ac47a34928b767ead3813126d5_name": {
      "defaultValue": null,
      "type": "String"
    },
    "disks_DSCTest_OsDisk_1_4e6965ad0c20482598728a524b26abd7_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_testgraph_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_xDnsServer_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Automation_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Compute_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Profile_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Storage_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "disks_litware_db1_disk2_d603e600fa80474a849a6566877cbd63_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Compute_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Profile_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Storage_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_graphical1_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_ListVms_Py_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_StopAllVMs_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_testPython_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Sql_name_4": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_xNetworking_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Resources_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "disks_Win2012R2_OsDisk_1_fe542e911bf4479fbdc2d11c78971d0a_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_stop_vms_py_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Automation_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Resources_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "disks_ubuntu_dev_OsDisk_1_21f5cfe532764ec3bb09ddddb518b4fa_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Resources_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_Add_DOSVMNIC_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_Create_DOSVM_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_Remove_DOSVM_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Azure.Storage_name_4": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Automation_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "disks_ansible_dev_OsDisk_1_a290032cb77547068a03ddf3221dee47_name": {
      "defaultValue": null,
      "type": "String"
    },
    "disks_litware_db1_OsDisk_1_41e5664854c24be9a4fa1cca78a662bf_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Automation_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_StopAzureV2Vm_name": {
      "defaultValue": null,
      "type": "String"
    },
    "extensions_Microsoft.Powershell.DSC_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Compute_name_4": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Network_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Profile_name_4": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Storage_name_4": {
      "defaultValue": null,
      "type": "String"
    },
    "disks_WinServ2016_1_OsDisk_1_e4eb4942fe1348c291ed5a3e8038eb58_name": {
      "defaultValue": null,
      "type": "String"
    },
    "disks_WinServ2016_2_OsDisk_1_8a20983bc36140ab9db3192c91eacbf3_name": {
      "defaultValue": null,
      "type": "String"
    },
    "disks_WinServ2016_3_OsDisk_1_5901edd16b14434d9b8f5cce98e8f4fb_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_get_vm_state_py_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_Remove_DOSVMNIC_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_xActiveDirectory_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureAutomationTutorial_name": {
      "defaultValue": null,
      "type": "String"
    },
    "connections_AzureRunAsConnection_name": {
      "defaultValue": null,
      "type": "String"
    },
    "disks_ansible_master_OsDisk_1_099bc106d9b245a8a1c47360aab0e76c_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_Get_VMPowerState_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Resources_name_4": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Core_name": {
      "defaultValue": null,
      "type": "String"
    },
    "extensions_Microsoft.Powershell.DSC_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "disks_ansible_client1_OsDisk_1_0f6f92984e444574beb8de988b06def0_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_AzureRM.Automation_name_4": {
      "defaultValue": null,
      "type": "String"
    },
    "schedules_midnight_nightly_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.WSMan.Management_name": {
      "defaultValue": null,
      "type": "String"
    },
    "certificates_AzureRunAsCertificate_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureAutomationTutorial_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Core_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureAutomationTutorial_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "connections_AzureRunAsConnection_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureAutomationTutorial_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "connections_AzureRunAsConnection_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_Update_AzureModules_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Utility_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.WSMan.Management_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Core_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "extensions_Microsoft.Powershell.DSC_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "extensions_Microsoft.Powershell.DSC_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "extensions_Microsoft.Powershell.DSC_name_4": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Core_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_Create_DOSVirtualNIC_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_Delete_DOSVirtualNIC_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_Delete_DOSVMDataDisk_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_Remove_DOSVMDataDisk_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Security_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.WSMan.Management_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "certificates_AzureRunAsCertificate_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.WSMan.Management_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "certificates_AzureRunAsCertificate_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureAutomationTutorialScript_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Orchestrator.SshClient.Cmdlets_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Utility_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureAutomationTutorialPython2_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureClassicAutomationTutorial_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Management_name": {
      "defaultValue": null,
      "type": "String"
    },
    "connections_AzureClassicRunAsConnection_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Security_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Utility_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Utility_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureAutomationTutorial_name_4": {
      "defaultValue": null,
      "type": "String"
    },
    "connections_AzureRunAsConnection_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Diagnostics_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureAutomationTutorialScript_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Orchestrator.SshClient.Cmdlets_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Security_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_ansible_restore_nic_74791fc1a4a040d8a25745ceaac3ed22_name": {
      "defaultValue": null,
      "type": "String"
    },
    "networkInterfaces_ansible_restore_nic_a849641c879c43cca5448d0e3bbc7554_name": {
      "defaultValue": null,
      "type": "String"
    },
    "publicIPAddresses_ansible_restore_pip_918a58400f0d4993a99524b72d48e90a_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Security_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_Create_DOSStorageAccount_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Core_name_4": {
      "defaultValue": null,
      "type": "String"
    },
    "certificates_AzureClassicRunAsCertificate_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureClassicAutomationTutorial_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Management_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureAutomationTutorialScript_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Orchestrator.SshClient.Cmdlets_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureAutomationTutorialScript_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Orchestrator.SshClient.Cmdlets_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.WSMan.Management_name_4": {
      "defaultValue": null,
      "type": "String"
    },
    "certificates_AzureRunAsCertificate_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Diagnostics_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureAutomationTutorialPython2_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureClassicAutomationTutorial_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Management_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "connections_AzureClassicRunAsConnection_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureAutomationTutorialPython2_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureClassicAutomationTutorial_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Management_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "connections_AzureClassicRunAsConnection_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_OperationalValidationTests_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Diagnostics_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Diagnostics_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_Assert_AutoShutdownSchedule_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Utility_name_4": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_xPSDesiredStateConfiguration_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Orchestrator.AssetManagement.Cmdlets_name": {
      "defaultValue": null,
      "type": "String"
    },
    "certificates_AzureClassicRunAsCertificate_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "certificates_AzureClassicRunAsCertificate_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Security_name_4": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureClassicAutomationTutorialScript_name": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureAutomationTutorialScript_name_4": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Orchestrator.SshClient.Cmdlets_name_4": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Orchestrator.AssetManagement.Cmdlets_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureClassicAutomationTutorial_name_4": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Management_name_4": {
      "defaultValue": null,
      "type": "String"
    },
    "connections_AzureClassicRunAsConnection_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureClassicAutomationTutorialScript_name_1": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Orchestrator.AssetManagement.Cmdlets_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Orchestrator.AssetManagement.Cmdlets_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Microsoft.PowerShell.Diagnostics_name_4": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureClassicAutomationTutorialScript_name_2": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureClassicAutomationTutorialScript_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "certificates_AzureClassicRunAsCertificate_name_3": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_e3ec7dc9_35fb_4e5b_9e36_4fb6cfd66e73_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_58add9de_f4a8_42a5_995d_f0cc79c2b8ce_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_98140eb6_42f3_4ab2_a960_b7547a99f5b4_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_06eda9e7_48df_48e7_a510_76cf73324567_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_3d3cf559_3ccc_4d96_87b0_5acda5d20af2_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_8e2f9306_54ae_4298_8f2a_35f99931b353_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_763a13d1_7b2f_4987_bf52_320b770ecdde_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_b5e01b67_26a6_4f3b_975c_78b29aa8e84a_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_6a70e042_c4b2_4472_8c5a_a256018b072f_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_14d4fda6_f962_4960_9f78_543bbff0c27c_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_a402c5af_3570_450c_829c_ce06e3bdd5ee_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_4ac4616c_4a63_41a5_988c_d34af09ad0e9_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_2a03e218_ce6d_4f97_8abb_bfadada8d44f_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_777930fd_f46f_40b6_b3c6_2fefbaff6d5a_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_e063de3e_2ff2_481f_99b2_1dc478662032_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_f4d0cb6c_04f5_44b3_9327_5c355332cc01_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_031fc232_6a4e_4dd1_a7dc_68e86985f02b_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_8e7efe43_de50_4c94_a056_56ff15bb2273_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_f14d3c83_b07a_464b_bd03_dbbb109b702e_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_95792f30_d4b5_44fe_aea7_be93482dea1b_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_1ffd7106_69d5_45e9_b101_64568a6a84ef_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_c863dd19_d669_461a_a4fb_e87211a4c008_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_b9120bdb_3e57_4973_a324_045697a60735_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_0c704120_9be4_4983_b20d_4ba5551c51f1_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_73f26c9b_c990_43b1_9652_b40e5266d05d_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_491dd928_311e_49f0_beaa_b736d6b9f703_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_2d3bd669_cb06_4b3c_9437_805d0d1e662a_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_0c1f4f4f_17d6_45b6_820d_ddb87d40b9e2_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_c51f0157_2ad6_40ee_a96b_604d4296d66c_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_57a90dcc_e5ef_4db5_97a6_a0db96a8d364_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_736954a0_a91c_47b9_81c6_20a33a988105_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_7d29f045_6bf9_43f9_91eb_2db828e5219e_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_0022039b_e8f1_4227_86b2_61bf9ffa4b6d_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_9caf673d_136f_4100_a2e5_5c4303d6b68c_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_5161f132_a339_4c7f_aa62_31bb231f8c86_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_8242363c_e7bc_45d9_a811_a38535631ea9_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_c209499d_76ca_4000_8952_06b28411d232_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_87cf25b1_84cd_4ab7_8851_fc068fd83e0a_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_08d5507e_6403_4155_94d9_4c2a76eca852_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_415cbeb3_68f1_48f3_a328_3b6814392d54_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_89d165f9_2bed_4de8_be0a_b6ef36ce4c06_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_35facee3_5931_4fc4_b54f_3d829d79ba13_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_231e45a5_61fb_48de_9a15_e917f8085ec9_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_b67e0fd0_64ea_4153_871f_d2c752bfc3da_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_e1520253_eb19_496c_bc21_7277b7f18631_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_2a4315bc_6111_4db9_9ec4_b1339d2a3790_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_e581a235_9bae_45c5_bbe0_795d68e14f0d_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_c173dcc0_4b87_4089_906c_ed18d732794f_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_6febfc02_50ed_42ed_ac12_38cf78fdcf09_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_a655afa8_1ace_4822_9400_029ae3fbeb20_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_8b87619f_2b85_4763_ab9a_1b66e861d275_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_d39cebdb_1d6b_4cac_8565_af41c080906b_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_29c0a054_a82a_4181_bcad_42fe90f8477d_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_53549a0c_87e3_4e0f_bb12_e7d100880b24_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_eda22465_4f66_4089_9b3b_b77c4f1be430_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_3302ce8e_7e13_4e62_ac81_f95775ac4485_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_b6076ac4_bf13_432c_a6c9_4f84ce0db503_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_9d90eb94_26b1_4358_96ba_9dece2500baf_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_7707d6ec_0620_4acc_a4f3_1fb89f26b227_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_a6d8853b_da6d_4a98_8202_5db44572e8dd_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_4408df4a_787d_48be_bdbd_1b62217fbec2_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_6f4c39cc_88c0_4f08_aa41_cb2bcc201cf1_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_62ec0495_704c_4d06_9301_06e2d3ac9234_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_e40615b0_dc38_438e_a64f_6f0407b9aa09_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_d2a1ce15_0cb4_4b65_ad03_7aca0e7a5b22_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_17bd2310_0557_4321_9849_0cf41f987154_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_db3d0acb_16de_415b_a393_461b38f979be_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_f14dd221_4b73_447b_833a_890a3b555ee3_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_b8b12340_c33b_4cf1_91ec_5238a7fab560_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_36917953_8179_46fd_9ccf_e62d4c97d1d7_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_6cc755f1_edd4_47a1_9349_9bfeb3867a9f_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_020c98df_6610_46fd_bf7a_ebdf4f8e8538_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_0420c590_c510_4417_92ab_eb8bd9e90bbf_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_0e731a40_60be_40e7_8986_2094738cac75_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_fe6ffacc_8c28_4797_8671_db2f3dd6cbec_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_3c2576bc_10d0_4b6f_b3e1_b45482332ef5_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_54d549ff_dea7_44fc_b3c7_79e5def96b41_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_6715b925_b421_492f_92fb_63edac2b5ad3_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_499966c5_bee1_4c93_99e8_8de6803a7e99_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_8c19e6e3_355f_4ac4_9e73_36c804c46199_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_aa2701a6_7877_492e_9f19_2cd40405e254_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_72141da2_6b7e_45db_9a2b_63fb3a486b9d_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_5d326f7a_c8c7_4343_adc2_0239a7c8cc67_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_75a38829_116d_4b9b_a465_7aacf7d167bb_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_463b1be2_c1c5_4892_85d5_394e324089bb_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_33591968_4abc_4426_a273_6f12d5c6f224_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_4b0e03e7_77a1_460c_b913_e9fb5e93f360_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_c165f162_beff_4fb7_88c4_e148e1c47c14_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_49863540_a771_4b54_9721_8081d8492f11_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_0d98605d_8149_45ec_8e3c_04ceb1308bc2_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_c34868c9_a4dd_4ae2_bc1f_a67f6cbd496a_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_6b19b140_1540_421e_86c0_40566ec7c38c_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_55f0968d_7067_4d55_8c5d_56f0f64dfb7e_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobs_7ad8c426_3c22_41d5_b846_05e184d5e8a7_name": {
      "defaultValue": null,
      "type": "String"
    },
    "modules_Orchestrator.AssetManagement.Cmdlets_name_4": {
      "defaultValue": null,
      "type": "String"
    },
    "runbooks_AzureClassicAutomationTutorialScript_name_4": {
      "defaultValue": null,
      "type": "String"
    },
    "jobSchedules_c4656e87_cf6f_4041_af93_ccb13f384ce2_name": {
      "defaultValue": null,
      "type": "String"
    },
    "jobSchedules_68382494_0c5f_4150_8160_b5b44d4806a4_name": {
      "defaultValue": null,
      "type": "String"
    },
    "variables_Microsoft.Azure.Automation.SourceControl.OAuthToken_name": {
      "defaultValue": null,
      "type": "String"
    },
    "schedules_Initial_deployment_cdd0bf30_d270_400a_a49c_1be97bdb1526_name": {
      "defaultValue": null,
      "type": "String"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Automation/automationAccounts",
      "name": "[parameters('automationAccounts_austinauto_name_1')]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "sku": {
          "name": "[parameters('automationAccounts_austinauto_name')]"
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Automation/automationAccounts",
      "name": "[parameters('automationAccounts_gov_automation_name_1')]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "sku": {
          "name": "[parameters('automationAccounts_gov_automation_name')]"
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Automation/automationAccounts",
      "name": "[parameters('automationAccounts_iam_va_name_1')]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "sku": {
          "name": "[parameters('automationAccounts_iam_va_name')]"
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Automation/automationAccounts",
      "name": "[parameters('automationAccounts_testauto_name_1')]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "sku": {
          "name": "[parameters('automationAccounts_testauto_name')]"
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Automation/automationAccounts",
      "name": "[parameters('automationAccounts_west_auto_name_1')]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "sku": {
          "name": "[parameters('automationAccounts_west_auto_name')]"
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[parameters('disks_ansible_dev_OsDisk_1_a290032cb77547068a03ddf3221dee47_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovtexas",
      "scale": null,
      "properties": {
        "accountType": "Premium_LRS",
        "osType": "Linux",
        "creationData": {
          "createOption": "FromImage",
          "imageReference": {
            "id": "/Subscriptions/fcbf1a19-f965-41c6-94a7-5e415c4d06a8/Providers/Microsoft.Compute/Locations/USGovTexas/Publishers/RedHat/ArtifactTypes/VMImage/Offers/RHEL/Skus/7.3/Versions/7.3.2017090105"
          }
        },
        "diskSizeGB": 32
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[parameters('disks_f5_test_OsDisk_1_46d849ac47a34928b767ead3813126d5_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovtexas",
      "scale": null,
      "properties": {
        "accountType": "Premium_LRS",
        "osType": "Linux",
        "creationData": {
          "createOption": "FromImage",
          "imageReference": {
            "id": "/Subscriptions/fcbf1a19-f965-41c6-94a7-5e415c4d06a8/Providers/Microsoft.Compute/Locations/USGovTexas/Publishers/f5-networks/ArtifactTypes/VMImage/Offers/f5-big-ip/Skus/f5-bigip-virtual-edition-best-byol/Versions/13.0.0300"
          }
        },
        "diskSizeGB": 127
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[parameters('disks_ansible_client1_OsDisk_1_0f6f92984e444574beb8de988b06def0_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "accountType": "Premium_LRS",
        "osType": "Windows",
        "creationData": {
          "createOption": "FromImage",
          "imageReference": {
            "id": "/Subscriptions/fcbf1a19-f965-41c6-94a7-5e415c4d06a8/Providers/Microsoft.Compute/Locations/usgovvirginia/Publishers/MicrosoftWindowsServer/ArtifactTypes/VMImage/Offers/WindowsServer/Skus/2012-Datacenter/Versions/latest"
          }
        },
        "diskSizeGB": 128
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[parameters('disks_ansible_master_OsDisk_1_099bc106d9b245a8a1c47360aab0e76c_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "accountType": "Premium_LRS",
        "osType": "Linux",
        "creationData": {
          "createOption": "FromImage",
          "imageReference": {
            "id": "/Subscriptions/fcbf1a19-f965-41c6-94a7-5e415c4d06a8/Providers/Microsoft.Compute/Locations/usgovvirginia/Publishers/Canonical/ArtifactTypes/VMImage/Offers/UbuntuServer/Skus/16.04-LTS/Versions/latest"
          }
        },
        "diskSizeGB": 30
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[parameters('disks_d_89056aa292f7427a8c01746efe157eb9_osdisk_000_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "tags": {
        "RSVaultBackup": "e02da74e-62e9-4dd2-a7a8-492b62e5f271"
      },
      "scale": null,
      "properties": {
        "accountType": "Premium_LRS",
        "osType": "Linux",
        "creationData": {
          "createOption": "Import",
          "sourceUri": "[concat('https', '://', parameters('storageAccounts_datadiskstandard_name'), '.blob.core.usgovcloudapi.net', '/vhd432aabd9c4b841739698b52665b577e3/b89056aa292f7427a8c01746efe157eb9.vhd')]"
        },
        "diskSizeGB": 30
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_datadiskstandard_name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[parameters('disks_datadisk_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "accountType": "Standard_LRS",
        "creationData": {
          "createOption": "Empty"
        },
        "diskSizeGB": 38
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[parameters('disks_datadisk1_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "accountType": "Standard_LRS",
        "creationData": {
          "createOption": "Empty"
        },
        "diskSizeGB": 850
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[parameters('disks_DSCTest_OsDisk_1_4e6965ad0c20482598728a524b26abd7_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "accountType": "Premium_LRS",
        "osType": "Windows",
        "creationData": {
          "createOption": "FromImage",
          "imageReference": {
            "id": "/Subscriptions/fcbf1a19-f965-41c6-94a7-5e415c4d06a8/Providers/Microsoft.Compute/Locations/usgovvirginia/Publishers/MicrosoftWindowsServer/ArtifactTypes/VMImage/Offers/WindowsServer/Skus/2016-Datacenter/Versions/2016.127.20171017"
          }
        },
        "diskSizeGB": 128
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[parameters('disks_f5test_OsDisk_1_68488e3bd6c14bdf8082805d4aee53f4_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "accountType": "Premium_LRS",
        "osType": "Linux",
        "creationData": {
          "createOption": "FromImage",
          "imageReference": {
            "id": "/Subscriptions/fcbf1a19-f965-41c6-94a7-5e415c4d06a8/Providers/Microsoft.Compute/Locations/usgovvirginia/Publishers/f5-networks/ArtifactTypes/VMImage/Offers/f5-big-ip/Skus/f5-bigip-virtual-edition-best-byol/Versions/13.0.021"
          }
        },
        "diskSizeGB": 127
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[parameters('disks_litware_db1_disk2_d603e600fa80474a849a6566877cbd63_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "accountType": "Premium_LRS",
        "creationData": {
          "createOption": "Empty"
        },
        "diskSizeGB": 1023
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[parameters('disks_litware_db1_OsDisk_1_41e5664854c24be9a4fa1cca78a662bf_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "accountType": "Premium_LRS",
        "osType": "Windows",
        "creationData": {
          "createOption": "FromImage",
          "imageReference": {
            "id": "/Subscriptions/fcbf1a19-f965-41c6-94a7-5e415c4d06a8/Providers/Microsoft.Compute/Locations/usgovvirginia/Publishers/MicrosoftSQLServer/ArtifactTypes/VMImage/Offers/SQL2012SP3-WS2012R2/Skus/Enterprise/Versions/latest"
          }
        },
        "diskSizeGB": 128
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[parameters('disks_MyBigVMOSDisk_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "accountType": "Standard_LRS",
        "osType": "Windows",
        "creationData": {
          "createOption": "FromImage",
          "imageReference": {
            "id": "/Subscriptions/fcbf1a19-f965-41c6-94a7-5e415c4d06a8/Providers/Microsoft.Compute/Locations/usgovvirginia/Publishers/MicrosoftWindowsServer/ArtifactTypes/VMImage/Offers/WindowsServer/Skus/2016-Datacenter/Versions/2016.127.20171216"
          }
        },
        "diskSizeGB": 128
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[parameters('disks_rhel6_OsDisk_1_c7b9bfad147c402590c85d82dd6577aa_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "accountType": "Premium_LRS",
        "osType": "Linux",
        "creationData": {
          "createOption": "FromImage",
          "imageReference": {
            "id": "/Subscriptions/fcbf1a19-f965-41c6-94a7-5e415c4d06a8/Providers/Microsoft.Compute/Locations/usgovvirginia/Publishers/RedHat/ArtifactTypes/VMImage/Offers/RHEL/Skus/6.8/Versions/6.8.2017090104"
          }
        },
        "diskSizeGB": 32
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[parameters('disks_rhel73_OsDisk_1_c462312871d5497aaae857dd50c11a2e_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "accountType": "Premium_LRS",
        "osType": "Linux",
        "creationData": {
          "createOption": "FromImage",
          "imageReference": {
            "id": "/Subscriptions/fcbf1a19-f965-41c6-94a7-5e415c4d06a8/Providers/Microsoft.Compute/Locations/usgovvirginia/Publishers/RedHat/ArtifactTypes/VMImage/Offers/RHEL/Skus/7.3/Versions/7.3.2017090105"
          }
        },
        "diskSizeGB": 32
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[parameters('disks_ubuntu_dev_OsDisk_1_21f5cfe532764ec3bb09ddddb518b4fa_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "accountType": "Premium_LRS",
        "osType": "Linux",
        "creationData": {
          "createOption": "FromImage",
          "imageReference": {
            "id": "/Subscriptions/fcbf1a19-f965-41c6-94a7-5e415c4d06a8/Providers/Microsoft.Compute/Locations/usgovvirginia/Publishers/Canonical/ArtifactTypes/VMImage/Offers/UbuntuServer/Skus/16.04-LTS/Versions/16.04.201801120"
          }
        },
        "diskSizeGB": 30
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[parameters('disks_Win2012R2_OsDisk_1_fe542e911bf4479fbdc2d11c78971d0a_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "accountType": "Premium_LRS",
        "osType": "Windows",
        "creationData": {
          "createOption": "FromImage",
          "imageReference": {
            "id": "/Subscriptions/fcbf1a19-f965-41c6-94a7-5e415c4d06a8/Providers/Microsoft.Compute/Locations/usgovvirginia/Publishers/MicrosoftWindowsServer/ArtifactTypes/VMImage/Offers/WindowsServer/Skus/2012-Datacenter/Versions/3.127.20171017"
          }
        },
        "diskSizeGB": 128
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[parameters('disks_WinServ2016_1_OsDisk_1_e4eb4942fe1348c291ed5a3e8038eb58_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "accountType": "Premium_LRS",
        "osType": "Windows",
        "creationData": {
          "createOption": "FromImage",
          "imageReference": {
            "id": "/Subscriptions/fcbf1a19-f965-41c6-94a7-5e415c4d06a8/Providers/Microsoft.Compute/Locations/usgovvirginia/Publishers/MicrosoftWindowsServer/ArtifactTypes/VMImage/Offers/WindowsServer/Skus/2016-Datacenter/Versions/2016.127.20171216"
          }
        },
        "diskSizeGB": 128
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[parameters('disks_WinServ2016_2_OsDisk_1_8a20983bc36140ab9db3192c91eacbf3_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "accountType": "Premium_LRS",
        "osType": "Windows",
        "creationData": {
          "createOption": "FromImage",
          "imageReference": {
            "id": "/Subscriptions/fcbf1a19-f965-41c6-94a7-5e415c4d06a8/Providers/Microsoft.Compute/Locations/usgovvirginia/Publishers/MicrosoftWindowsServer/ArtifactTypes/VMImage/Offers/WindowsServer/Skus/2016-Datacenter/Versions/2016.127.20171216"
          }
        },
        "diskSizeGB": 128
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[parameters('disks_WinServ2016_3_OsDisk_1_5901edd16b14434d9b8f5cce98e8f4fb_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "accountType": "Premium_LRS",
        "osType": "Windows",
        "creationData": {
          "createOption": "FromImage",
          "imageReference": {
            "id": "/Subscriptions/fcbf1a19-f965-41c6-94a7-5e415c4d06a8/Providers/Microsoft.Compute/Locations/usgovvirginia/Publishers/MicrosoftWindowsServer/ArtifactTypes/VMImage/Offers/WindowsServer/Skus/2016-Datacenter/Versions/2016.127.20171216"
          }
        },
        "diskSizeGB": 128
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('virtualMachines_ansible_client1_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS2_v2"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(parameters('virtualMachines_ansible_client1_name'),'_OsDisk_1_0f6f92984e444574beb8de988b06def0')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "id": "[resourceId('Microsoft.Compute/disks', parameters('disks_ansible_client1_OsDisk_1_0f6f92984e444574beb8de988b06def0_name'))]"
            }
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_ansible_client1_name')]",
          "adminUsername": "ox",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ansible_client1454_name'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/disks', parameters('disks_ansible_client1_OsDisk_1_0f6f92984e444574beb8de988b06def0_name'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ansible_client1454_name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('virtualMachines_ansible_master_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS2_v2"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "16.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "name": "[concat(parameters('virtualMachines_ansible_master_name'),'_OsDisk_1_099bc106d9b245a8a1c47360aab0e76c')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "id": "[resourceId('Microsoft.Compute/disks', parameters('disks_ansible_master_OsDisk_1_099bc106d9b245a8a1c47360aab0e76c_name'))]"
            }
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_ansible_master_name')]",
          "adminUsername": "ox",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          },
          "secrets": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ansible_master72_name'))]",
              "properties": {
                "primary": true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ansiblesecond_name'))]",
              "properties": {
                "primary": false
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/disks', parameters('disks_ansible_master_OsDisk_1_099bc106d9b245a8a1c47360aab0e76c_name'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ansible_master72_name'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ansiblesecond_name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('virtualMachines_ansible_restore_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS2_v2"
        },
        "storageProfile": {
          "osDisk": {
            "osType": "Linux",
            "name": "d-89056aa292f7427a8c01746efe157eb9-osdisk-000",
            "createOption": "Attach",
            "caching": "ReadWrite",
            "managedDisk": {
              "id": "[resourceId('Microsoft.Compute/disks', parameters('disks_d_89056aa292f7427a8c01746efe157eb9_osdisk_000_name'))]"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ansible_restore_nic_74791fc1a4a040d8a25745ceaac3ed22_name'))]",
              "properties": {
                "primary": true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ansible_restore_nic_a849641c879c43cca5448d0e3bbc7554_name'))]",
              "properties": {
                "primary": false
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/disks', parameters('disks_d_89056aa292f7427a8c01746efe157eb9_osdisk_000_name'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ansible_restore_nic_74791fc1a4a040d8a25745ceaac3ed22_name'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ansible_restore_nic_a849641c879c43cca5448d0e3bbc7554_name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('virtualMachines_DSCTest_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS2_v2"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(parameters('virtualMachines_DSCTest_name'),'_OsDisk_1_4e6965ad0c20482598728a524b26abd7')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "id": "[resourceId('Microsoft.Compute/disks', parameters('disks_DSCTest_OsDisk_1_4e6965ad0c20482598728a524b26abd7_name'))]"
            }
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_DSCTest_name')]",
          "adminUsername": "ox",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_dsctest803_name'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/disks', parameters('disks_DSCTest_OsDisk_1_4e6965ad0c20482598728a524b26abd7_name'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_dsctest803_name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('virtualMachines_rhel6_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS2_v2"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "RedHat",
            "offer": "RHEL",
            "sku": "6.8",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "name": "[concat(parameters('virtualMachines_rhel6_name'),'_OsDisk_1_c7b9bfad147c402590c85d82dd6577aa')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "id": "[resourceId('Microsoft.Compute/disks', parameters('disks_rhel6_OsDisk_1_c7b9bfad147c402590c85d82dd6577aa_name'))]"
            }
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_rhel6_name')]",
          "adminUsername": "ox",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          },
          "secrets": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_rhel6695_name'))]",
              "properties": {
                "primary": true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_rhel6second_name'))]",
              "properties": {
                "primary": false
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/disks', parameters('disks_rhel6_OsDisk_1_c7b9bfad147c402590c85d82dd6577aa_name'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_rhel6695_name'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_rhel6second_name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('virtualMachines_rhel73_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS2_v2"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "RedHat",
            "offer": "RHEL",
            "sku": "7.3",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "name": "[concat(parameters('virtualMachines_rhel73_name'),'_OsDisk_1_c462312871d5497aaae857dd50c11a2e')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "id": "[resourceId('Microsoft.Compute/disks', parameters('disks_rhel73_OsDisk_1_c462312871d5497aaae857dd50c11a2e_name'))]"
            }
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_rhel73_name')]",
          "adminUsername": "ox",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          },
          "secrets": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_rhel73343_name'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/disks', parameters('disks_rhel73_OsDisk_1_c462312871d5497aaae857dd50c11a2e_name'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_rhel73343_name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('virtualMachines_Server2016_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS2_v2"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[parameters('virtualMachines_Server2016_name')]",
            "createOption": "FromImage",
            "vhd": {
              "uri": "[concat('https', '://', parameters('storageAccounts_vhdpremium_name'), '.blob.core.usgovcloudapi.net', concat('/vhds/', parameters('virtualMachines_Server2016_name'),'20180109093743.vhd'))]"
            },
            "caching": "ReadWrite",
            "diskSizeGB": 127
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_Server2016_name')]",
          "adminUsername": "ox",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_server2016501_name'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_vhdpremium_name'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_server2016501_name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('virtualMachines_ubuntu_dev_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS11_v2"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "16.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "name": "[concat(parameters('virtualMachines_ubuntu_dev_name'),'_OsDisk_1_21f5cfe532764ec3bb09ddddb518b4fa')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "id": "[resourceId('Microsoft.Compute/disks', parameters('disks_ubuntu_dev_OsDisk_1_21f5cfe532764ec3bb09ddddb518b4fa_name'))]"
            }
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_ubuntu_dev_name')]",
          "adminUsername": "ox",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "/home/ox/.ssh/authorized_keys",
                  "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCoz5cnrDJSVGVtRR/I3fUeewDg9yTTcF9yDHyzooHO79ERY0a2Ii/ffePpGYfdWr55PoEJG9GIcXjsdyfTHgKJHD+BBVKRjb6kMGGhmCRjH2MSy9Bsom+zGr+YEAM1THF+GMCddq5jcOHBd1+8/zcZu+coCStDVQDrNRbZQlXnTxXYlV2nzF6mF/uyNj62OMNBb39qPdnJQ+RVYJrViQLRrJYL+qaePHdMTD2sljgpco3skCLT1gJ49z8u/o5Is3xDa/CoOgBcYY0nsXp1IU6b3e6whyFPdcuLwqDw+v5bIdD2neGTQUNP0i9ilwofNlN4QBgY3yVlEzilKE9vlmvUcxdh5PSHtszuklXhJuOo+pULq0hsrfPk04ywEOCbjDivm0v8hjthVamHYL50jl4nmjXZ/SCemZPB5KDfgWyGSFc1m1gvxin67um0g1cUa5/xk6sNwxnxDtiFOVhgUP0w1cSe5lnbXWTf5O/b3AX2UUExMzln1QQHIF36H1gH9c2SaEQ8cl5EKMPmOxDQPULFaCHq4gFS1QdXaKiKgfGwoB+eJo8fa8oRi9oU6pM30vNYoC7wlKEVNBDtsWADponQaguN4XJT0qLjJ0jn+M4Nn6fURoyJLD2/kbuK07JgyN6rBiHFgnvF+NmVfdnXfuR/yOlOkH9ACQxS7aPtX9pSiw=="
                }
              ]
            }
          },
          "secrets": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ubuntu_dev441_name'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/disks', parameters('disks_ubuntu_dev_OsDisk_1_21f5cfe532764ec3bb09ddddb518b4fa_name'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ubuntu_dev441_name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('virtualMachines_Win2012R2_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "tags": {
        "AutoShutdownSchedule": "8PM -> 6AM"
      },
      "scale": null,
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS2_v2"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(parameters('virtualMachines_Win2012R2_name'),'_OsDisk_1_fe542e911bf4479fbdc2d11c78971d0a')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "id": "[resourceId('Microsoft.Compute/disks', parameters('disks_Win2012R2_OsDisk_1_fe542e911bf4479fbdc2d11c78971d0a_name'))]"
            }
          },
          "dataDisks": [
            {
              "lun": 0,
              "name": "datadisk",
              "createOption": "Attach",
              "caching": "None",
              "managedDisk": {
                "storageAccountType": "Standard_LRS",
                "id": "[resourceId('Microsoft.Compute/disks', parameters('disks_datadisk_name'))]"
              },
              "diskSizeGB": 38
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_Win2012R2_name')]",
          "adminUsername": "ox",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_win2012r2266_name'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/disks', parameters('disks_Win2012R2_OsDisk_1_fe542e911bf4479fbdc2d11c78971d0a_name'))]",
        "[resourceId('Microsoft.Compute/disks', parameters('disks_datadisk_name'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_win2012r2266_name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('virtualMachines_WinServ2016_1_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS1_v2"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(parameters('virtualMachines_WinServ2016_1_name'),'_OsDisk_1_e4eb4942fe1348c291ed5a3e8038eb58')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "id": "[resourceId('Microsoft.Compute/disks', parameters('disks_WinServ2016_1_OsDisk_1_e4eb4942fe1348c291ed5a3e8038eb58_name'))]"
            }
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_WinServ2016_1_name')]",
          "adminUsername": "ox",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_winserv2016_1737_name'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/disks', parameters('disks_WinServ2016_1_OsDisk_1_e4eb4942fe1348c291ed5a3e8038eb58_name'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_winserv2016_1737_name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('virtualMachines_WinServ2016_2_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS1_v2"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(parameters('virtualMachines_WinServ2016_2_name'),'_OsDisk_1_8a20983bc36140ab9db3192c91eacbf3')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "id": "[resourceId('Microsoft.Compute/disks', parameters('disks_WinServ2016_2_OsDisk_1_8a20983bc36140ab9db3192c91eacbf3_name'))]"
            }
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_WinServ2016_2_name')]",
          "adminUsername": "ox",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_winserv2016_2698_name'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/disks', parameters('disks_WinServ2016_2_OsDisk_1_8a20983bc36140ab9db3192c91eacbf3_name'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_winserv2016_2698_name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('virtualMachines_WinServ2016_3_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS1_v2"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(parameters('virtualMachines_WinServ2016_3_name'),'_OsDisk_1_5901edd16b14434d9b8f5cce98e8f4fb')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "id": "[resourceId('Microsoft.Compute/disks', parameters('disks_WinServ2016_3_OsDisk_1_5901edd16b14434d9b8f5cce98e8f4fb_name'))]"
            }
          },
          "dataDisks": [
            {
              "lun": 0,
              "name": "datadisk1",
              "createOption": "Attach",
              "caching": "None",
              "managedDisk": {
                "id": "[resourceId('Microsoft.Compute/disks', parameters('disks_datadisk1_name'))]"
              }
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_WinServ2016_3_name')]",
          "adminUsername": "ox",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_winserv2016_3336_name'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/disks', parameters('disks_WinServ2016_3_OsDisk_1_5901edd16b14434d9b8f5cce98e8f4fb_name'))]",
        "[resourceId('Microsoft.Compute/disks', parameters('disks_datadisk1_name'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_winserv2016_3336_name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('virtualMachines_ansible_dev_name')]",
      "apiVersion": "2016-04-30-preview",
      "location": "USGovTexas",
      "scale": null,
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D2s_v3"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "RedHat",
            "offer": "RHEL",
            "sku": "7.3",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "name": "[concat(parameters('virtualMachines_ansible_dev_name'),'_OsDisk_1_a290032cb77547068a03ddf3221dee47')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "id": "[resourceId('Microsoft.Compute/disks', parameters('disks_ansible_dev_OsDisk_1_a290032cb77547068a03ddf3221dee47_name'))]"
            }
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_ansible_dev_name')]",
          "adminUsername": "ox",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "/home/ox/.ssh/authorized_keys",
                  "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCoz5cnrDJSVGVtRR/I3fUeewDg9yTTcF9yDHyzooHO79ERY0a2Ii/ffePpGYfdWr55PoEJG9GIcXjsdyfTHgKJHD+BBVKRjb6kMGGhmCRjH2MSy9Bsom+zGr+YEAM1THF+GMCddq5jcOHBd1+8/zcZu+coCStDVQDrNRbZQlXnTxXYlV2nzF6mF/uyNj62OMNBb39qPdnJQ+RVYJrViQLRrJYL+qaePHdMTD2sljgpco3skCLT1gJ49z8u/o5Is3xDa/CoOgBcYY0nsXp1IU6b3e6whyFPdcuLwqDw+v5bIdD2neGTQUNP0i9ilwofNlN4QBgY3yVlEzilKE9vlmvUcxdh5PSHtszuklXhJuOo+pULq0hsrfPk04ywEOCbjDivm0v8hjthVamHYL50jl4nmjXZ/SCemZPB5KDfgWyGSFc1m1gvxin67um0g1cUa5/xk6sNwxnxDtiFOVhgUP0w1cSe5lnbXWTf5O/b3AX2UUExMzln1QQHIF36H1gH9c2SaEQ8cl5EKMPmOxDQPULFaCHq4gFS1QdXaKiKgfGwoB+eJo8fa8oRi9oU6pM30vNYoC7wlKEVNBDtsWADponQaguN4XJT0qLjJ0jn+M4Nn6fURoyJLD2/kbuK07JgyN6rBiHFgnvF+NmVfdnXfuR/yOlOkH9ACQxS7aPtX9pSiw=="
                }
              ]
            }
          },
          "secrets": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ansible_dev447_name'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/disks', parameters('disks_ansible_dev_OsDisk_1_a290032cb77547068a03ddf3221dee47_name'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ansible_dev447_name'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('vaults_admin_password_name')]",
      "apiVersion": "2015-06-01",
      "location": "usgovvirginia",
      "tags": {},
      "scale": null,
      "properties": {
        "sku": {
          "family": "A",
          "name": "Standard"
        },
        "tenantId": "8a09f2d7-8415-4296-92b2-80bb4666c5fc",
        "accessPolicies": [
          {
            "tenantId": "8a09f2d7-8415-4296-92b2-80bb4666c5fc",
            "objectId": "9579be0f-edb9-4725-be7e-98b94e845bce",
            "permissions": {
              "keys": [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ],
              "secrets": [
                "Get",
                "List",
                "Set",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ]
            }
          }
        ],
        "enabledForDeployment": true
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_ansible_client1454_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.13.0.6",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ansible_client1_ip_name'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ansible_client1_nsg_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ansible_client1_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ansible_client1_nsg_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_ansible_master72_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.13.0.5",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ansible_master_ip_name'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ansible_master_nsg_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ansible_master_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ansible_master_nsg_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_ansible_restore_nic_74791fc1a4a040d8a25745ceaac3ed22_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "6495560cc70840e8bc5d340a4ce04c6c",
            "properties": {
              "privateIPAddress": "10.13.0.18",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ansible_restore_pip_918a58400f0d4993a99524b72d48e90a_name'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ansible_restore_pip_918a58400f0d4993a99524b72d48e90a_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_ansible_restore_nic_a849641c879c43cca5448d0e3bbc7554_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "07151684815d4a7c95298f753f8f5ab7",
            "properties": {
              "privateIPAddress": "10.13.0.19",
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_ansiblesecond_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.14.0.4",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_litware_db1_ip_name'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name')), '/subnets/subnet2')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_litware_db1_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_dsctest803_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.13.0.8",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_DSCTest_ip_name'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_DSCTest_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_f5test540_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.13.0.7",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_f5test_ip_name'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_f5test_nsg_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_f5test_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_f5test_nsg_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_MyBigNIC_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.13.0.12",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_MyBigPIP_name'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_MyBigPIP_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_rhel6695_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.13.0.14",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_rhel6_ip_name'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_rhel6_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_rhel6second_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.14.0.5",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_test1_ip_name'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name')), '/subnets/subnet2')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_test1_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_rhel73343_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.13.0.13",
              "privateIPAllocationMethod": "Static",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_rhel73_ip_name'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_rhel73_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_server2016501_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.13.0.11",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_Server2016_ip_name'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_Server2016_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_sql2016on2012r2_nic_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.13.0.4",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_sql2016On2012R2PIP_name'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_sql2016On2012R2PIP_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_test_dns_nic_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.15.1.20",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_test_dns_name')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_test_dns_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_ubuntu_dev441_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.13.0.20",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ubuntu_dev_ip_name'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ubuntu_dev_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_win2012r2266_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.13.0.9",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_Win2012R2_ip_name'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_Win2012R2_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_winserv2016_1737_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.13.0.15",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_WinServ2016_1_ip_name'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_WinServ2016_1_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_winserv2016_2698_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.13.0.16",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_WinServ2016_2_ip_name'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_WinServ2016_2_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_winserv2016_3336_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.13.0.17",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_WinServ2016_3_ip_name'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_WinServ2016_3_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_gov_vnet_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_ansible_dev447_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovtexas",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.0.0.8",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ansible_dev_ip_name'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_govvnet482_name')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ansible_dev_nsg_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ansible_dev_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_govvnet482_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ansible_dev_nsg_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_f5_test274_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovtexas",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.0.0.4",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_f5_test_ip_name'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_govvnet482_name')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_f5_test_nsg_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_f5_test_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_govvnet482_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_f5_test_nsg_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_Nic2_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovtexas",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.0.0.5",
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_govvnet482_name')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_govvnet482_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_NicTest2_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovtexas",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.0.0.6",
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_govvnet482_name')), '/subnets/default')]"
              }
            }
          },
          {
            "name": "test_second",
            "properties": {
              "privateIPAddress": "10.0.0.7",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_NicTest2_name'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_govvnet482_name')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_f5_test_nsg_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_govvnet482_name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_NicTest2_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_f5_test_nsg_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_third_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovtexas",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.120.0.4",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ipconfig1_name'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_govvnet482_name')), '/subnets/second')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_f5_test_nsg_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ipconfig1_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_govvnet482_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_f5_test_nsg_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('networkSecurityGroups_ansible_client1_nsg_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "Port_Any",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "10.13.0.0/16",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('networkSecurityGroups_ansible_master_nsg_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-ssh",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "PortTest",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "8080",
              "sourceAddressPrefix": "192.111.111.11",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('networkSecurityGroups_barracuda_firewall_nsg_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "securityRules": [
          {
            "name": "MGMT",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "807",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1010,
              "direction": "Inbound"
            }
          },
          {
            "name": "TINA_VPN",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "691",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1020,
              "direction": "Inbound"
            }
          },
          {
            "name": "HTTP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1030,
              "direction": "Inbound"
            }
          },
          {
            "name": "default-allow-ssh",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1040,
              "direction": "Inbound"
            }
          }
        ]
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('networkSecurityGroups_bastion_nsg_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-any",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "98.170.0.0/16",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1010,
              "direction": "Inbound"
            }
          },
          {
            "name": "TestMyRule",
            "properties": {
              "description": "This is a test rule",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "8080",
              "sourceAddressPrefix": "192.168.26.0/26",
              "destinationAddressPrefix": "10.10.10.0/28",
              "access": "Allow",
              "priority": 2200,
              "direction": "Inbound"
            }
          },
          {
            "name": "Port_80",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 970,
              "direction": "Inbound"
            }
          }
        ]
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('networkSecurityGroups_default_nsg_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          }
        ]
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('networkSecurityGroups_f5test_nsg_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-ssh",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          }
        ]
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('networkSecurityGroups_ansible_dev_nsg_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovtexas",
      "scale": null,
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-ssh",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          }
        ]
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('networkSecurityGroups_f5_test_nsg_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovtexas",
      "scale": null,
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-ssh",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          }
        ]
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_ansible_client1_ip_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_ansible_master_ip_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_ansible_restore_pip_918a58400f0d4993a99524b72d48e90a_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_barracuda_firewall_ip_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "adhgateway"
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_dc_ip_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_DSCTest_ip_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_f5test_ip_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_litware_db1_ip_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_litware_dc1_ip_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_MyBigPIP_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_rhel6_ip_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_rhel73_ip_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_Server2016_ip_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "austinserv2016"
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_sql2016On2012R2PIP_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_test1_ip_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_ubuntu_dev_ip_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_Win2012R2_ip_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_WinServ2016_1_ip_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "austin-winserv2016-1"
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_WinServ2016_2_ip_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "austin-winserv2016-2"
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_WinServ2016_3_ip_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "austin-winserv2016-3"
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_ansible_dev_ip_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovtexas",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "ansible-dev"
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_f5_test_ip_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovtexas",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_ipconfig1_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovtexas",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_NicTest2_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovtexas",
      "scale": null,
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworks_gov_vnet_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.13.0.0/16",
            "10.14.0.0/24"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.13.0.0/24"
            }
          },
          {
            "name": "subnet2",
            "properties": {
              "addressPrefix": "10.14.0.0/24"
            }
          }
        ]
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworks_test_dns_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.15.0.0/16"
          ]
        },
        "dhcpOptions": {
          "dnsServers": [
            "10.15.0.15"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.15.1.0/24"
            }
          }
        ]
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworks_govvnet482_name')]",
      "apiVersion": "2016-03-30",
      "location": "usgovtexas",
      "scale": null,
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/24",
            "10.120.0.0/24"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.0.0.0/24"
            }
          },
          {
            "name": "second",
            "properties": {
              "addressPrefix": "10.120.0.0/24"
            }
          }
        ]
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.RecoveryServices/vaults",
      "sku": {
        "name": "RS0",
        "tier": "Standard"
      },
      "name": "[parameters('vaults_austin_va_name')]",
      "apiVersion": "2016-06-01",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {},
      "dependsOn": []
    },
    {
      "type": "Microsoft.RecoveryServices/vaults",
      "sku": {
        "name": "RS0",
        "tier": "Standard"
      },
      "name": "[parameters('vaults_test_name')]",
      "apiVersion": "2016-06-01",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {},
      "dependsOn": []
    },
    {
      "type": "Microsoft.Sql/servers",
      "kind": "v12.0",
      "name": "[parameters('servers_sqltest_name')]",
      "apiVersion": "2014-04-01-preview",
      "location": "USDoD East",
      "scale": null,
      "properties": {
        "administratorLogin": "sqladmin",
        "administratorLoginPassword": null,
        "version": "12.0"
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "name": "[parameters('storageAccounts_datadiskstandard_name')]",
      "apiVersion": "2016-01-01",
      "location": "usgovvirginia",
      "tags": {},
      "scale": null,
      "properties": {},
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "name": "[parameters('storageAccounts_filestore_name')]",
      "apiVersion": "2016-01-01",
      "location": "usgovvirginia",
      "tags": {},
      "scale": null,
      "properties": {},
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "name": "[parameters('storageAccounts_govdiag284_name')]",
      "apiVersion": "2016-01-01",
      "location": "usgovvirginia",
      "tags": {},
      "scale": null,
      "properties": {},
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "name": "[parameters('storageAccounts_govdiag514_name')]",
      "apiVersion": "2016-01-01",
      "location": "usgovvirginia",
      "tags": {},
      "scale": null,
      "properties": {},
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Premium_LRS",
        "tier": "Premium"
      },
      "kind": "Storage",
      "name": "[parameters('storageAccounts_govdisks419_name')]",
      "apiVersion": "2016-01-01",
      "location": "usgovvirginia",
      "tags": {},
      "scale": null,
      "properties": {},
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "BlobStorage",
      "name": "[parameters('storageAccounts_oxtest01_name')]",
      "apiVersion": "2016-01-01",
      "location": "usgovtexas",
      "tags": {},
      "scale": null,
      "properties": {
        "accessTier": "Hot",
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": {
              "enabled": true
            }
          }
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "name": "[parameters('storageAccounts_oxtest02_name')]",
      "apiVersion": "2016-01-01",
      "location": "usgovtexas",
      "tags": {},
      "scale": null,
      "properties": {
        "encryption": {
          "keySource": "Microsoft.Storage"
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "kind": "BlobStorage",
      "name": "[parameters('storageAccounts_sharestuff_name')]",
      "apiVersion": "2016-01-01",
      "location": "usgovtexas",
      "tags": {},
      "scale": null,
      "properties": {
        "accessTier": "Hot",
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": {
              "enabled": true
            }
          }
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Premium_LRS",
        "tier": "Premium"
      },
      "kind": "Storage",
      "name": "[parameters('storageAccounts_vhdpremium_name')]",
      "apiVersion": "2016-01-01",
      "location": "usgovvirginia",
      "tags": {},
      "scale": null,
      "properties": {},
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "name": "[parameters('storageAccounts_vhdstandard_name')]",
      "apiVersion": "2016-01-01",
      "location": "usgovvirginia",
      "tags": {},
      "scale": null,
      "properties": {},
      "dependsOn": []
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('runbooks_AzureAutomationTutorial_name_3'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "GraphPowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('runbooks_AzureAutomationTutorialPython2_name_2'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "Python2",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('runbooks_AzureAutomationTutorialScript_name_3'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('runbooks_AzureClassicAutomationTutorial_name_3'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "GraphPowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('runbooks_AzureClassicAutomationTutorialScript_name_3'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('runbooks_stop_vms_py_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "Python2",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('runbooks_testrunbook_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('modules_Azure_name_3'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('modules_Azure.Storage_name_3'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('modules_AzureRM.Automation_name_3'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('modules_AzureRM.Compute_name_3'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('modules_AzureRM.Profile_name_3'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('modules_AzureRM.Resources_name_3'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('modules_AzureRM.Sql_name_3'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('modules_AzureRM.Storage_name_3'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('modules_BaseRole_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": false,
        "version": "1.3.0",
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('modules_Microsoft.PowerShell.Core_name_3'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('modules_Microsoft.PowerShell.Diagnostics_name_3'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('modules_Microsoft.PowerShell.Management_name_3'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('modules_Microsoft.PowerShell.Security_name_3'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('modules_Microsoft.PowerShell.Utility_name_3'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('modules_Microsoft.WSMan.Management_name_3'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('modules_Orchestrator.AssetManagement.Cmdlets_name_3'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('modules_Orchestrator.SshClient.Cmdlets_name_3'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/certificates",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('certificates_AzureClassicRunAsCertificate_name_2'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "description": "This certificate is used to authenticate with Azure so that you can manage Azure classic resources from runbooks. For details on this certificate, or to manage it, go to this account’s Settings.  For example usage, see the tutorial runbook in this account.",
        "base64Value": "[parameters('certificates_AzureClassicRunAsCertificate_base64Value')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/certificates",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('certificates_AzureRunAsCertificate_name_2'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "description": "This certificate is used to authenticate with the service principal that was automatically created for this account. For details on this service principal and certificate, or to recreate them, go to this account’s Settings. For example usage, see the tutorial runbook in this account.",
        "base64Value": "[parameters('certificates_AzureRunAsCertificate_base64Value')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/connections",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('connections_AzureClassicRunAsConnection_name_2'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "description": null,
        "fieldDefinitionValues": null,
        "connectionType": {
          "name": "AzureClassicCertificate"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/connections",
      "name": "[concat(parameters('automationAccounts_austinauto_name_1'), '/', parameters('connections_AzureRunAsConnection_name_2'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "description": null,
        "fieldDefinitionValues": null,
        "connectionType": {
          "name": "AzureServicePrincipal"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_austinauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_Add_DOSVMNIC_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_Assert_AutoShutdownSchedule_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_AzureAutomationTutorial_name_4'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "GraphPowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_AzureAutomationTutorialScript_name_4'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_AzureClassicAutomationTutorial_name_4'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "GraphPowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_AzureClassicAutomationTutorialScript_name_4'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_Create_DOSStorageAccount_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_Create_DOSVirtualNIC_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_Create_DOSVM_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_Delete_DOSVirtualNIC_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_Delete_DOSVMDataDisk_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_get_vm_state_py_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "Python2",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_Get_VMPowerState_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_graphical1_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "GraphPowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_ListVms_Py_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "Python2",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_OperationalValidationTests_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_Remove_DOSVM_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_Remove_DOSVMDataDisk_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_Remove_DOSVMNIC_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_stop_vms_py_name_1'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "Python2",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_StopAllVMs_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_StopAzureV2Vm_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "GraphPowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_Test1_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_Test2_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_test4_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_testgraph_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "GraphPowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_testPython_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "Python2",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('runbooks_Update_AzureModules_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_Azure_name_4'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": false,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_Azure.Storage_name_4'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": false,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_AzureRM.Automation_name_4'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": false,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_AzureRM.Compute_name_4'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": false,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_AzureRM.Network_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": false,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_AzureRM.Profile_name_4'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": false,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_AzureRM.Resources_name_4'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": false,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_AzureRM.Sql_name_4'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": false,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_AzureRM.Storage_name_4'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": false,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_BaseRole_name_1'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": false,
        "version": "1.3.0",
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_dosSEP_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": false,
        "version": "0.1.0",
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_Microsoft.PowerShell.Core_name_4'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_Microsoft.PowerShell.Diagnostics_name_4'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_Microsoft.PowerShell.Management_name_4'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_Microsoft.PowerShell.Security_name_4'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_Microsoft.PowerShell.Utility_name_4'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_Microsoft.WSMan.Management_name_4'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_Orchestrator.AssetManagement.Cmdlets_name_4'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_Orchestrator.SshClient.Cmdlets_name_4'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_Pester_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": false,
        "version": "4.3.1",
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_TestFiles_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": false,
        "version": "1.1",
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_xActiveDirectory_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": false,
        "version": "2.16.0.0",
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_xDnsServer_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": false,
        "version": "1.8.0.0",
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_xNetworking_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": false,
        "version": "5.1.0.0",
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('modules_xPSDesiredStateConfiguration_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": false,
        "version": "7.0.0.0",
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/certificates",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('certificates_AzureClassicRunAsCertificate_name_3'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "description": "This certificate is used to authenticate with Azure so that you can manage Azure classic resources from runbooks. For details on this certificate, or to manage it, go to this account’s Settings.  For example usage, see the tutorial runbook in this account.",
        "base64Value": "[parameters('certificates_AzureClassicRunAsCertificate_base64Value_1')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/certificates",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('certificates_AzureRunAsCertificate_name_3'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "description": "This certificate is used to authenticate with the service principal that was automatically created for this account. For details on this service principal and certificate, or to recreate them, go to this account’s Settings. For example usage, see the tutorial runbook in this account.",
        "base64Value": "[parameters('certificates_AzureRunAsCertificate_base64Value_1')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/connections",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('connections_AzureClassicRunAsConnection_name_3'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "description": null,
        "fieldDefinitionValues": null,
        "connectionType": {
          "name": "AzureClassicCertificate"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/connections",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('connections_AzureRunAsConnection_name_3'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "description": null,
        "fieldDefinitionValues": null,
        "connectionType": {
          "name": "AzureServicePrincipal"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/variables",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('variables_Microsoft.Azure.Automation.SourceControl.OAuthToken_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isEncrypted": true,
        "description": null,
        "value": "[parameters('variables_Microsoft.Azure.Automation.SourceControl.OAuthToken_value')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/schedules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('schedules_Initial_deployment_cdd0bf30_d270_400a_a49c_1be97bdb1526_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "description": null,
        "startTime": "2017-12-20T20:16:00-06:00",
        "expiryTime": "2017-12-20T20:16:00-06:00",
        "isEnabled": true,
        "interval": null,
        "frequency": "OneTime"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/schedules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('schedules_midnight_nightly_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "description": "",
        "startTime": "2017-10-06T00:00:00-05:00",
        "expiryTime": "9999-12-31T17:59:00-06:00",
        "isEnabled": true,
        "interval": 1,
        "frequency": "Day"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_e3ec7dc9_35fb_4e5b_9e36_4fb6cfd66e73_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_58add9de_f4a8_42a5_995d_f0cc79c2b8ce_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_98140eb6_42f3_4ab2_a960_b7547a99f5b4_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_06eda9e7_48df_48e7_a510_76cf73324567_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_3d3cf559_3ccc_4d96_87b0_5acda5d20af2_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_8e2f9306_54ae_4298_8f2a_35f99931b353_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_763a13d1_7b2f_4987_bf52_320b770ecdde_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_b5e01b67_26a6_4f3b_975c_78b29aa8e84a_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_6a70e042_c4b2_4472_8c5a_a256018b072f_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_14d4fda6_f962_4960_9f78_543bbff0c27c_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_a402c5af_3570_450c_829c_ce06e3bdd5ee_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_4ac4616c_4a63_41a5_988c_d34af09ad0e9_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_2a03e218_ce6d_4f97_8abb_bfadada8d44f_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_777930fd_f46f_40b6_b3c6_2fefbaff6d5a_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_e063de3e_2ff2_481f_99b2_1dc478662032_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_f4d0cb6c_04f5_44b3_9327_5c355332cc01_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_031fc232_6a4e_4dd1_a7dc_68e86985f02b_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "OperationalValidationTests"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_8e7efe43_de50_4c94_a056_56ff15bb2273_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_f14d3c83_b07a_464b_bd03_dbbb109b702e_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_95792f30_d4b5_44fe_aea7_be93482dea1b_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_1ffd7106_69d5_45e9_b101_64568a6a84ef_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_c863dd19_d669_461a_a4fb_e87211a4c008_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_b9120bdb_3e57_4973_a324_045697a60735_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_0c704120_9be4_4983_b20d_4ba5551c51f1_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_73f26c9b_c990_43b1_9652_b40e5266d05d_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_491dd928_311e_49f0_beaa_b736d6b9f703_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_2d3bd669_cb06_4b3c_9437_805d0d1e662a_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_0c1f4f4f_17d6_45b6_820d_ddb87d40b9e2_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_c51f0157_2ad6_40ee_a96b_604d4296d66c_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_57a90dcc_e5ef_4db5_97a6_a0db96a8d364_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_736954a0_a91c_47b9_81c6_20a33a988105_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_7d29f045_6bf9_43f9_91eb_2db828e5219e_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_0022039b_e8f1_4227_86b2_61bf9ffa4b6d_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_9caf673d_136f_4100_a2e5_5c4303d6b68c_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_5161f132_a339_4c7f_aa62_31bb231f8c86_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_8242363c_e7bc_45d9_a811_a38535631ea9_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_c209499d_76ca_4000_8952_06b28411d232_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_87cf25b1_84cd_4ab7_8851_fc068fd83e0a_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_08d5507e_6403_4155_94d9_4c2a76eca852_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_415cbeb3_68f1_48f3_a328_3b6814392d54_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_89d165f9_2bed_4de8_be0a_b6ef36ce4c06_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_35facee3_5931_4fc4_b54f_3d829d79ba13_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_231e45a5_61fb_48de_9a15_e917f8085ec9_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_b67e0fd0_64ea_4153_871f_d2c752bfc3da_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_e1520253_eb19_496c_bc21_7277b7f18631_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_2a4315bc_6111_4db9_9ec4_b1339d2a3790_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_e581a235_9bae_45c5_bbe0_795d68e14f0d_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_c173dcc0_4b87_4089_906c_ed18d732794f_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_6febfc02_50ed_42ed_ac12_38cf78fdcf09_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_a655afa8_1ace_4822_9400_029ae3fbeb20_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "testPython"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_8b87619f_2b85_4763_ab9a_1b66e861d275_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_d39cebdb_1d6b_4cac_8565_af41c080906b_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_29c0a054_a82a_4181_bcad_42fe90f8477d_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_53549a0c_87e3_4e0f_bb12_e7d100880b24_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_eda22465_4f66_4089_9b3b_b77c4f1be430_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_3302ce8e_7e13_4e62_ac81_f95775ac4485_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_b6076ac4_bf13_432c_a6c9_4f84ce0db503_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_9d90eb94_26b1_4358_96ba_9dece2500baf_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_7707d6ec_0620_4acc_a4f3_1fb89f26b227_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_a6d8853b_da6d_4a98_8202_5db44572e8dd_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_4408df4a_787d_48be_bdbd_1b62217fbec2_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_6f4c39cc_88c0_4f08_aa41_cb2bcc201cf1_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_62ec0495_704c_4d06_9301_06e2d3ac9234_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_e40615b0_dc38_438e_a64f_6f0407b9aa09_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_d2a1ce15_0cb4_4b65_ad03_7aca0e7a5b22_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_17bd2310_0557_4321_9849_0cf41f987154_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_db3d0acb_16de_415b_a393_461b38f979be_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_f14dd221_4b73_447b_833a_890a3b555ee3_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_b8b12340_c33b_4cf1_91ec_5238a7fab560_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_36917953_8179_46fd_9ccf_e62d4c97d1d7_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_6cc755f1_edd4_47a1_9349_9bfeb3867a9f_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_020c98df_6610_46fd_bf7a_ebdf4f8e8538_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_0420c590_c510_4417_92ab_eb8bd9e90bbf_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_0e731a40_60be_40e7_8986_2094738cac75_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_fe6ffacc_8c28_4797_8671_db2f3dd6cbec_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_3c2576bc_10d0_4b6f_b3e1_b45482332ef5_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_54d549ff_dea7_44fc_b3c7_79e5def96b41_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_6715b925_b421_492f_92fb_63edac2b5ad3_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_499966c5_bee1_4c93_99e8_8de6803a7e99_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_8c19e6e3_355f_4ac4_9e73_36c804c46199_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_aa2701a6_7877_492e_9f19_2cd40405e254_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_72141da2_6b7e_45db_9a2b_63fb3a486b9d_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_5d326f7a_c8c7_4343_adc2_0239a7c8cc67_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_75a38829_116d_4b9b_a465_7aacf7d167bb_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_463b1be2_c1c5_4892_85d5_394e324089bb_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_33591968_4abc_4426_a273_6f12d5c6f224_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_4b0e03e7_77a1_460c_b913_e9fb5e93f360_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_c165f162_beff_4fb7_88c4_e148e1c47c14_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "Patch-MicrosoftOMSComputers"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_49863540_a771_4b54_9721_8081d8492f11_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "Patch-MicrosoftOMSComputer"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_0d98605d_8149_45ec_8e3c_04ceb1308bc2_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_c34868c9_a4dd_4ae2_bc1f_a67f6cbd496a_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_6b19b140_1540_421e_86c0_40566ec7c38c_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_55f0968d_7067_4d55_8c5d_56f0f64dfb7e_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobs",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobs_7ad8c426_3c22_41d5_b846_05e184d5e8a7_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobSchedules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobSchedules_c4656e87_cf6f_4041_af93_ccb13f384ce2_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "Patch-MicrosoftOMSComputers"
        },
        "schedule": {
          "name": "Initial-deployment_cdd0bf30-d270-400a-a49c-1be97bdb1526"
        },
        "parameters": null
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobSchedules",
      "name": "[concat(parameters('automationAccounts_gov_automation_name_1'), '/', parameters('jobSchedules_68382494_0c5f_4150_8160_b5b44d4806a4_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "runbook": {
          "name": "StopAllVMs"
        },
        "schedule": {
          "name": "midnight nightly"
        },
        "parameters": null
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_gov_automation_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('runbooks_AzureAutomationTutorial_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "GraphPowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('runbooks_AzureAutomationTutorialPython2_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "Python2",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('runbooks_AzureAutomationTutorialScript_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('runbooks_AzureClassicAutomationTutorial_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "GraphPowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('runbooks_AzureClassicAutomationTutorialScript_name'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('modules_Azure_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('modules_Azure.Storage_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('modules_AzureRM.Automation_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('modules_AzureRM.Compute_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('modules_AzureRM.Profile_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('modules_AzureRM.Resources_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('modules_AzureRM.Sql_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('modules_AzureRM.Storage_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('modules_Microsoft.PowerShell.Core_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('modules_Microsoft.PowerShell.Diagnostics_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('modules_Microsoft.PowerShell.Management_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('modules_Microsoft.PowerShell.Security_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('modules_Microsoft.PowerShell.Utility_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('modules_Microsoft.WSMan.Management_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('modules_Orchestrator.AssetManagement.Cmdlets_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('modules_Orchestrator.SshClient.Cmdlets_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/certificates",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('certificates_AzureClassicRunAsCertificate_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "description": "This certificate is used to authenticate with Azure so that you can manage Azure classic resources from runbooks. For details on this certificate, or to manage it, go to this account’s Settings.  For example usage, see the tutorial runbook in this account.",
        "base64Value": "[parameters('certificates_AzureClassicRunAsCertificate_base64Value_2')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/certificates",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('certificates_AzureRunAsCertificate_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "description": "This certificate is used to authenticate with the service principal that was automatically created for this account. For details on this service principal and certificate, or to recreate them, go to this account’s Settings. For example usage, see the tutorial runbook in this account.",
        "base64Value": "[parameters('certificates_AzureRunAsCertificate_base64Value_2')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/connections",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('connections_AzureClassicRunAsConnection_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "description": null,
        "fieldDefinitionValues": null,
        "connectionType": {
          "name": "AzureClassicCertificate"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/connections",
      "name": "[concat(parameters('automationAccounts_iam_va_name_1'), '/', parameters('connections_AzureRunAsConnection_name'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "description": null,
        "fieldDefinitionValues": null,
        "connectionType": {
          "name": "AzureServicePrincipal"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_iam_va_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_testauto_name_1'), '/', parameters('runbooks_AzureAutomationTutorial_name_1'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "GraphPowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_testauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_testauto_name_1'), '/', parameters('runbooks_AzureAutomationTutorialScript_name_1'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_testauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_testauto_name_1'), '/', parameters('runbooks_AzureClassicAutomationTutorial_name_1'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "GraphPowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_testauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_testauto_name_1'), '/', parameters('runbooks_AzureClassicAutomationTutorialScript_name_1'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_testauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_testauto_name_1'), '/', parameters('modules_Azure_name_1'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_testauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_testauto_name_1'), '/', parameters('modules_Azure.Storage_name_1'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_testauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_testauto_name_1'), '/', parameters('modules_AzureRM.Automation_name_1'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_testauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_testauto_name_1'), '/', parameters('modules_AzureRM.Compute_name_1'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_testauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_testauto_name_1'), '/', parameters('modules_AzureRM.Profile_name_1'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_testauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_testauto_name_1'), '/', parameters('modules_AzureRM.Resources_name_1'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_testauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_testauto_name_1'), '/', parameters('modules_AzureRM.Sql_name_1'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_testauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_testauto_name_1'), '/', parameters('modules_AzureRM.Storage_name_1'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_testauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_testauto_name_1'), '/', parameters('modules_Microsoft.PowerShell.Core_name_1'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_testauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_testauto_name_1'), '/', parameters('modules_Microsoft.PowerShell.Diagnostics_name_1'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_testauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_testauto_name_1'), '/', parameters('modules_Microsoft.PowerShell.Management_name_1'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_testauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_testauto_name_1'), '/', parameters('modules_Microsoft.PowerShell.Security_name_1'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_testauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_testauto_name_1'), '/', parameters('modules_Microsoft.PowerShell.Utility_name_1'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_testauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_testauto_name_1'), '/', parameters('modules_Microsoft.WSMan.Management_name_1'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_testauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_testauto_name_1'), '/', parameters('modules_Orchestrator.AssetManagement.Cmdlets_name_1'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_testauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_testauto_name_1'), '/', parameters('modules_Orchestrator.SshClient.Cmdlets_name_1'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_testauto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('runbooks_AzureAutomationTutorial_name_2'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "GraphPowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('runbooks_AzureAutomationTutorialPython2_name_1'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "Python2",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('runbooks_AzureAutomationTutorialScript_name_2'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('runbooks_AzureClassicAutomationTutorial_name_2'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "GraphPowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('runbooks_AzureClassicAutomationTutorialScript_name_2'))]",
      "apiVersion": "2015-10-31",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('modules_Azure_name_2'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('modules_Azure.Storage_name_2'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('modules_AzureRM.Automation_name_2'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('modules_AzureRM.Compute_name_2'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('modules_AzureRM.Profile_name_2'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('modules_AzureRM.Resources_name_2'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('modules_AzureRM.Sql_name_2'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('modules_AzureRM.Storage_name_2'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('modules_Microsoft.PowerShell.Core_name_2'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('modules_Microsoft.PowerShell.Diagnostics_name_2'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('modules_Microsoft.PowerShell.Management_name_2'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('modules_Microsoft.PowerShell.Security_name_2'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('modules_Microsoft.PowerShell.Utility_name_2'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('modules_Microsoft.WSMan.Management_name_2'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('modules_Orchestrator.AssetManagement.Cmdlets_name_2'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('modules_Orchestrator.SshClient.Cmdlets_name_2'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/certificates",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('certificates_AzureClassicRunAsCertificate_name_1'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "description": "This certificate is used to authenticate with Azure so that you can manage Azure classic resources from runbooks. For details on this certificate, or to manage it, go to this account’s Settings.  For example usage, see the tutorial runbook in this account.",
        "base64Value": "[parameters('certificates_AzureClassicRunAsCertificate_base64Value_3')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/certificates",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('certificates_AzureRunAsCertificate_name_1'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "description": "This certificate is used to authenticate with the service principal that was automatically created for this account. For details on this service principal and certificate, or to recreate them, go to this account’s Settings. For example usage, see the tutorial runbook in this account.",
        "base64Value": "[parameters('certificates_AzureRunAsCertificate_base64Value_3')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/connections",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('connections_AzureClassicRunAsConnection_name_1'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "description": null,
        "fieldDefinitionValues": null,
        "connectionType": {
          "name": "AzureClassicCertificate"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/connections",
      "name": "[concat(parameters('automationAccounts_west_auto_name_1'), '/', parameters('connections_AzureRunAsConnection_name_1'))]",
      "apiVersion": "2015-10-31",
      "scale": null,
      "properties": {
        "description": null,
        "fieldDefinitionValues": null,
        "connectionType": {
          "name": "AzureServicePrincipal"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_west_auto_name_1'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('virtualMachines_DSCTest_name'), '/', parameters('extensions_Microsoft.Powershell.DSC_name'))]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "tags": {
        "AutomationAccountARMID": "/subscriptions/fcbf1a19-f965-41c6-94a7-5e415c4d06a8/resourceGroups/gov/providers/Microsoft.Automation/automationAccounts/gov-automation"
      },
      "scale": null,
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.26",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "https://eus2oaasibizamarketprod1.blob.core.windows.net/automationdscpreview/RegistrationMetaConfigV2.zip",
          "ConfigurationFunction": "RegistrationMetaConfigV2.ps1\\RegistrationMetaConfigV2",
          "Properties": [
            {
              "Name": "RegistrationKey",
              "Value": {
                "UserName": "PLACEHOLDER_DONOTUSE",
                "Password": "PrivateSettingsRef:registrationKeyPrivate"
              },
              "TypeName": "System.Management.Automation.PSCredential"
            },
            {
              "Name": "RegistrationUrl",
              "Value": "https://usge-agentservice-prod-1.azure-automation.us/accounts/c5abcf98-e43f-4455-8807-d2d220704e03",
              "TypeName": "System.String"
            },
            {
              "Name": "NodeConfigurationName",
              "Value": "File1And2.localhost.meta",
              "TypeName": "System.String"
            },
            {
              "Name": "ConfigurationMode",
              "Value": "applyAndMonitor",
              "TypeName": "System.String"
            },
            {
              "Name": "ConfigurationModeFrequencyMins",
              "Value": 15,
              "TypeName": "System.Int32"
            },
            {
              "Name": "RefreshFrequencyMins",
              "Value": 30,
              "TypeName": "System.Int32"
            },
            {
              "Name": "RebootNodeIfNeeded",
              "Value": false,
              "TypeName": "System.Boolean"
            },
            {
              "Name": "ActionAfterReboot",
              "Value": "continueConfiguration",
              "TypeName": "System.String"
            },
            {
              "Name": "AllowModuleOverwrite",
              "Value": false,
              "TypeName": "System.Boolean"
            }
          ]
        },
        "protectedSettings": {}
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_DSCTest_name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('virtualMachines_Server2016_name'), '/', parameters('extensions_Microsoft.Powershell.DSC_name_1'))]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "tags": {
        "AutomationAccountARMID": "/subscriptions/fcbf1a19-f965-41c6-94a7-5e415c4d06a8/resourceGroups/gov/providers/Microsoft.Automation/automationAccounts/gov-automation"
      },
      "scale": null,
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.26",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "https://eus2oaasibizamarketprod1.blob.core.windows.net/automationdscpreview/RegistrationMetaConfigV2.zip",
          "ConfigurationFunction": "RegistrationMetaConfigV2.ps1\\RegistrationMetaConfigV2",
          "Properties": [
            {
              "Name": "RegistrationKey",
              "Value": {
                "UserName": "PLACEHOLDER_DONOTUSE",
                "Password": "PrivateSettingsRef:registrationKeyPrivate"
              },
              "TypeName": "System.Management.Automation.PSCredential"
            },
            {
              "Name": "RegistrationUrl",
              "Value": "https://usge-agentservice-prod-1.azure-automation.us/accounts/c5abcf98-e43f-4455-8807-d2d220704e03",
              "TypeName": "System.String"
            },
            {
              "Name": "NodeConfigurationName",
              "Value": "webserver.localhost",
              "TypeName": "System.String"
            },
            {
              "Name": "ConfigurationMode",
              "Value": "applyAndMonitor",
              "TypeName": "System.String"
            },
            {
              "Name": "ConfigurationModeFrequencyMins",
              "Value": 30,
              "TypeName": "System.Int32"
            },
            {
              "Name": "RefreshFrequencyMins",
              "Value": 30,
              "TypeName": "System.Int32"
            },
            {
              "Name": "RebootNodeIfNeeded",
              "Value": false,
              "TypeName": "System.Boolean"
            },
            {
              "Name": "ActionAfterReboot",
              "Value": "continueConfiguration",
              "TypeName": "System.String"
            },
            {
              "Name": "AllowModuleOverwrite",
              "Value": false,
              "TypeName": "System.Boolean"
            }
          ]
        },
        "protectedSettings": {}
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_Server2016_name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('virtualMachines_Win2012R2_name'), '/', parameters('extensions_IaaSDiagnostics_name'))]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "scale": null,
      "properties": {
        "publisher": "Microsoft.Azure.Diagnostics",
        "type": "[parameters('extensions_IaaSDiagnostics_name')]",
        "typeHandlerVersion": "1.5",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "StorageAccount": "govdiag284",
          "xmlCfg": "[parameters('extensions_IaaSDiagnostics_xmlCfg')]"
        },
        "protectedSettings": {
          "storageAccountName": "[parameters('extensions_IaaSDiagnostics_storageAccountName')]",
          "storageAccountKey": "[parameters('extensions_IaaSDiagnostics_storageAccountKey')]",
          "storageAccountEndPoint": "[parameters('extensions_IaaSDiagnostics_storageAccountEndPoint')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_Win2012R2_name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('virtualMachines_WinServ2016_1_name'), '/', parameters('extensions_Microsoft.Powershell.DSC_name_2'))]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "tags": {
        "AutomationAccountARMID": "/subscriptions/fcbf1a19-f965-41c6-94a7-5e415c4d06a8/resourceGroups/gov/providers/Microsoft.Automation/automationAccounts/gov-automation"
      },
      "scale": null,
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.26",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "https://eus2oaasibizamarketprod1.blob.core.windows.net/automationdscpreview/RegistrationMetaConfigV2.zip",
          "ConfigurationFunction": "RegistrationMetaConfigV2.ps1\\RegistrationMetaConfigV2",
          "Properties": [
            {
              "Name": "RegistrationKey",
              "Value": {
                "UserName": "PLACEHOLDER_DONOTUSE",
                "Password": "PrivateSettingsRef:registrationKeyPrivate"
              },
              "TypeName": "System.Management.Automation.PSCredential"
            },
            {
              "Name": "RegistrationUrl",
              "Value": "https://usge-agentservice-prod-1.azure-automation.us/accounts/c5abcf98-e43f-4455-8807-d2d220704e03",
              "TypeName": "System.String"
            },
            {
              "Name": "NodeConfigurationName",
              "Value": "webserver_iam.localhost",
              "TypeName": "System.String"
            },
            {
              "Name": "ConfigurationMode",
              "Value": "applyAndMonitor",
              "TypeName": "System.String"
            },
            {
              "Name": "ConfigurationModeFrequencyMins",
              "Value": 15,
              "TypeName": "System.Int32"
            },
            {
              "Name": "RefreshFrequencyMins",
              "Value": 30,
              "TypeName": "System.Int32"
            },
            {
              "Name": "RebootNodeIfNeeded",
              "Value": false,
              "TypeName": "System.Boolean"
            },
            {
              "Name": "ActionAfterReboot",
              "Value": "continueConfiguration",
              "TypeName": "System.String"
            },
            {
              "Name": "AllowModuleOverwrite",
              "Value": false,
              "TypeName": "System.Boolean"
            }
          ]
        },
        "protectedSettings": {}
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_WinServ2016_1_name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('virtualMachines_WinServ2016_2_name'), '/', parameters('extensions_Microsoft.Powershell.DSC_name_3'))]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "tags": {
        "AutomationAccountARMID": "/subscriptions/fcbf1a19-f965-41c6-94a7-5e415c4d06a8/resourceGroups/gov/providers/Microsoft.Automation/automationAccounts/gov-automation"
      },
      "scale": null,
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.26",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "https://eus2oaasibizamarketprod1.blob.core.windows.net/automationdscpreview/RegistrationMetaConfigV2.zip",
          "ConfigurationFunction": "RegistrationMetaConfigV2.ps1\\RegistrationMetaConfigV2",
          "Properties": [
            {
              "Name": "RegistrationKey",
              "Value": {
                "UserName": "PLACEHOLDER_DONOTUSE",
                "Password": "PrivateSettingsRef:registrationKeyPrivate"
              },
              "TypeName": "System.Management.Automation.PSCredential"
            },
            {
              "Name": "RegistrationUrl",
              "Value": "https://usge-agentservice-prod-1.azure-automation.us/accounts/c5abcf98-e43f-4455-8807-d2d220704e03",
              "TypeName": "System.String"
            },
            {
              "Name": "NodeConfigurationName",
              "Value": "webserver.localhost",
              "TypeName": "System.String"
            },
            {
              "Name": "ConfigurationMode",
              "Value": "applyAndMonitor",
              "TypeName": "System.String"
            },
            {
              "Name": "ConfigurationModeFrequencyMins",
              "Value": 15,
              "TypeName": "System.Int32"
            },
            {
              "Name": "RefreshFrequencyMins",
              "Value": 30,
              "TypeName": "System.Int32"
            },
            {
              "Name": "RebootNodeIfNeeded",
              "Value": false,
              "TypeName": "System.Boolean"
            },
            {
              "Name": "ActionAfterReboot",
              "Value": "continueConfiguration",
              "TypeName": "System.String"
            },
            {
              "Name": "AllowModuleOverwrite",
              "Value": false,
              "TypeName": "System.Boolean"
            }
          ]
        },
        "protectedSettings": {}
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_WinServ2016_2_name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('virtualMachines_WinServ2016_3_name'), '/', parameters('extensions_Microsoft.Powershell.DSC_name_4'))]",
      "apiVersion": "2016-04-30-preview",
      "location": "usgovvirginia",
      "tags": {
        "AutomationAccountARMID": "/subscriptions/fcbf1a19-f965-41c6-94a7-5e415c4d06a8/resourceGroups/gov/providers/Microsoft.Automation/automationAccounts/gov-automation"
      },
      "scale": null,
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.26",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "https://eus2oaasibizamarketprod1.blob.core.windows.net/automationdscpreview/RegistrationMetaConfigV2.zip",
          "ConfigurationFunction": "RegistrationMetaConfigV2.ps1\\RegistrationMetaConfigV2",
          "Properties": [
            {
              "Name": "RegistrationKey",
              "Value": {
                "UserName": "PLACEHOLDER_DONOTUSE",
                "Password": "PrivateSettingsRef:registrationKeyPrivate"
              },
              "TypeName": "System.Management.Automation.PSCredential"
            },
            {
              "Name": "RegistrationUrl",
              "Value": "https://usge-agentservice-prod-1.azure-automation.us/accounts/c5abcf98-e43f-4455-8807-d2d220704e03",
              "TypeName": "System.String"
            },
            {
              "Name": "NodeConfigurationName",
              "Value": "webserver_iam.localhost",
              "TypeName": "System.String"
            },
            {
              "Name": "ConfigurationMode",
              "Value": "applyAndMonitor",
              "TypeName": "System.String"
            },
            {
              "Name": "ConfigurationModeFrequencyMins",
              "Value": 15,
              "TypeName": "System.Int32"
            },
            {
              "Name": "RefreshFrequencyMins",
              "Value": 30,
              "TypeName": "System.Int32"
            },
            {
              "Name": "RebootNodeIfNeeded",
              "Value": false,
              "TypeName": "System.Boolean"
            },
            {
              "Name": "ActionAfterReboot",
              "Value": "continueConfiguration",
              "TypeName": "System.String"
            },
            {
              "Name": "AllowModuleOverwrite",
              "Value": false,
              "TypeName": "System.Boolean"
            }
          ]
        },
        "protectedSettings": {}
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_WinServ2016_3_name'))]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "kind": "v12.0,user",
      "name": "[concat(parameters('servers_sqltest_name'), '/', parameters('databases_testdb_name'))]",
      "apiVersion": "2014-04-01-preview",
      "location": "USDoD East",
      "scale": null,
      "properties": {
        "databaseId": "9a25b7de-3855-4522-8e51-1c4cf3dfa00c",
        "edition": "Basic",
        "status": "Online",
        "serviceLevelObjective": "Basic",
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "maxSizeBytes": "2147483648",
        "creationDate": "2017-09-12T18:09:19.673Z",
        "currentServiceObjectiveId": "dd6d99bb-f193-4ec1-86f2-43d3bccbc49c",
        "requestedServiceObjectiveId": "dd6d99bb-f193-4ec1-86f2-43d3bccbc49c",
        "requestedServiceObjectiveName": "Basic",
        "sampleName": null,
        "defaultSecondaryLocation": "USDoD Central",
        "earliestRestoreDate": "2018-03-09T00:00:00Z",
        "elasticPoolName": null,
        "containmentState": 2,
        "readScale": "Disabled",
        "failoverGroupId": null,
        "zoneRedundant": null,
        "isUpgradeRequested": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqltest_name'))]"
      ]
    }
  ]
}